# .github/workflows/pyspark-ci.yml

name: PySpark CI with Pytest and Coverage

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Trigger on pushes to the main branch
  pull_request:
    branches: [ main ] # Also trigger on pull requests to main

jobs:
  test-and-generate-report:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' # Specify your Python version

      # 3. Install Java, which is required by PySpark
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Run tests and generate coverage report
      - name: Run Pytest and Generate Coverage Report
        run: |
          pytest --cov=src --cov-report=xml --cov-report=html

      # 6. Upload coverage report as an artifact
      # This makes the report available to the next job (for GitHub Pages)
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/ # The directory containing the HTML report

  deploy-report-to-pages:
    # This job only runs if the test job completes successfully
    needs: test-and-generate-report
    runs-on: ubuntu-latest
    
    # Grant permissions for the GITHUB_TOKEN to upload to GitHub Pages
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 1. Download the coverage report artifact from the previous job
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./coverage

      # 2. Upload artifact for GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./coverage

      # 3. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
